/**********************************************************************
* ファイル名:	enemycontrol.cpp
* 作成者:		HAL東京ゲーム学科　山本 壮将
* 説明:			敵の管理用プログラム
***********************************************************************/

//*********************************************************************
// インクルードファイル
//*********************************************************************
#include "enemycontrol.h"


//*******************************************************************
// グローバル変数
//*******************************************************************
bool Check;

//*********************************************************************
// 関数名:	void InitEnemyall(void)
// 引数:	なし
// 戻り値:	なし
// 説明:	敵関連の全てを初期化する
//*********************************************************************
void InitEnemyall(void)
{
	ENEMYLENGTH *maplength = GetEnemylength(0);
	InitEnemy();
	//CreateEnemy();
}

//*********************************************************************
// 関数名:	void UnitEnemyall(void)
// 引数:	なし
// 戻り値:	なし
// 説明:	敵関連の全てを終了する
//*********************************************************************
void UninitEnemyall(void)
{
	UninitEnemy();
}

//*********************************************************************
// 関数名:	void UpdateEnemyall(void)
// 引数:	なし
// 戻り値:	なし
// 説明:	敵関連の全てを更新する
//*********************************************************************
void UpdateEnemyall(void)
{
	UpdateEnemy();
}

//*********************************************************************
// 関数名:	void InitEnemyall(void)
// 引数:	なし
// 戻り値:	なし
// 説明:	敵関連の全てを初期化する
//*********************************************************************
void DrawEnemyall(void)
{
	DrawEnemy();
}


//*********************************************************************
//	関数:	D3DXVECTOR3 Enemy_controll()
//	引数:	現在はなし
//	説明:	ゲームの状態などから試験管の目的値を返す
//*********************************************************************
//D3DXVECTOR3	Enemy_controll()
//{
//	ENEMY *enemy = GetEnemy(0);
//
//	//	警戒状態の場合はプレイヤーへ向けて移動する
//
//	//	既に別の試験官がプレイヤーへ向かっているなら移動しない
//	//if()
//	return 0;
//}